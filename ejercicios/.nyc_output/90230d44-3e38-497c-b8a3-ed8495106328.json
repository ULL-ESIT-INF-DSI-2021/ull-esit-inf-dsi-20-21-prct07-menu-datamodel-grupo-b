{"/home/usuario/ull-esit-inf-dsi-20-21-prct07-menu-datamodel-grupo-b/ejercicios/src/classIngredient.ts":{"path":"/home/usuario/ull-esit-inf-dsi-20-21-prct07-menu-datamodel-grupo-b/ejercicios/src/classIngredient.ts","statementMap":{"0":{"start":{"line":16,"column":0},"end":{"line":16,"column":62}},"1":{"start":{"line":17,"column":0},"end":{"line":17,"column":49}},"2":{"start":{"line":27,"column":0},"end":{"line":33,"column":65}},"3":{"start":{"line":28,"column":4},"end":{"line":28,"column":52}},"4":{"start":{"line":29,"column":4},"end":{"line":29,"column":52}},"5":{"start":{"line":30,"column":4},"end":{"line":30,"column":52}},"6":{"start":{"line":31,"column":4},"end":{"line":31,"column":52}},"7":{"start":{"line":32,"column":4},"end":{"line":32,"column":52}},"8":{"start":{"line":51,"column":8},"end":{"line":51,"column":25}},"9":{"start":{"line":52,"column":8},"end":{"line":52,"column":33}},"10":{"start":{"line":53,"column":8},"end":{"line":53,"column":27}},"11":{"start":{"line":54,"column":8},"end":{"line":54,"column":43}},"12":{"start":{"line":55,"column":8},"end":{"line":55,"column":31}},"13":{"start":{"line":56,"column":8},"end":{"line":56,"column":29}},"14":{"start":{"line":57,"column":8},"end":{"line":57,"column":25}},"15":{"start":{"line":58,"column":8},"end":{"line":58,"column":27}},"16":{"start":{"line":59,"column":8},"end":{"line":59,"column":115}},"17":{"start":{"line":63,"column":8},"end":{"line":63,"column":25}},"18":{"start":{"line":67,"column":8},"end":{"line":67,"column":26}},"19":{"start":{"line":71,"column":8},"end":{"line":71,"column":28}},"20":{"start":{"line":75,"column":8},"end":{"line":75,"column":34}},"21":{"start":{"line":79,"column":8},"end":{"line":79,"column":27}},"22":{"start":{"line":83,"column":8},"end":{"line":83,"column":26}},"23":{"start":{"line":86,"column":0},"end":{"line":86,"column":32}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":27,"column":1},"end":{"line":27,"column":2}},"loc":{"start":{"line":27,"column":23},"end":{"line":33,"column":1}},"line":27},"1":{"name":"(anonymous_1)","decl":{"start":{"line":50,"column":4},"end":{"line":50,"column":5}},"loc":{"start":{"line":50,"column":84},"end":{"line":60,"column":5}},"line":50},"2":{"name":"(anonymous_2)","decl":{"start":{"line":62,"column":4},"end":{"line":62,"column":5}},"loc":{"start":{"line":62,"column":14},"end":{"line":64,"column":5}},"line":62},"3":{"name":"(anonymous_3)","decl":{"start":{"line":66,"column":4},"end":{"line":66,"column":5}},"loc":{"start":{"line":66,"column":15},"end":{"line":68,"column":5}},"line":66},"4":{"name":"(anonymous_4)","decl":{"start":{"line":70,"column":4},"end":{"line":70,"column":5}},"loc":{"start":{"line":70,"column":18},"end":{"line":72,"column":5}},"line":70},"5":{"name":"(anonymous_5)","decl":{"start":{"line":74,"column":4},"end":{"line":74,"column":5}},"loc":{"start":{"line":74,"column":23},"end":{"line":76,"column":5}},"line":74},"6":{"name":"(anonymous_6)","decl":{"start":{"line":78,"column":4},"end":{"line":78,"column":5}},"loc":{"start":{"line":78,"column":16},"end":{"line":80,"column":5}},"line":78},"7":{"name":"(anonymous_7)","decl":{"start":{"line":82,"column":4},"end":{"line":82,"column":5}},"loc":{"start":{"line":82,"column":15},"end":{"line":84,"column":5}},"line":82}},"branchMap":{"0":{"loc":{"start":{"line":33,"column":16},"end":{"line":33,"column":63}},"type":"binary-expr","locations":[{"start":{"line":33,"column":16},"end":{"line":33,"column":34}},{"start":{"line":33,"column":39},"end":{"line":33,"column":62}}],"line":33}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":14,"9":14,"10":14,"11":14,"12":14,"13":14,"14":14,"15":14,"16":14,"17":6,"18":16,"19":16,"20":16,"21":16,"22":9,"23":1},"f":{"0":1,"1":14,"2":6,"3":16,"4":16,"5":16,"6":16,"7":9},"b":{"0":[1,1]},"inputSourceMap":{"version":3,"file":"/home/usuario/ull-esit-inf-dsi-20-21-prct07-menu-datamodel-grupo-b/ejercicios/src/classIngredient.ts","sources":["/home/usuario/ull-esit-inf-dsi-20-21-prct07-menu-datamodel-grupo-b/ejercicios/src/classIngredient.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;EAaE;;;AAEF;;;;;;;GAOG;AACH,IAAY,UAAmD;AAA/D,WAAY,UAAU;IAAE,+CAAM,CAAA;IAAE,+CAAM,CAAA;IAAE,+CAAM,CAAA;IAAE,+CAAM,CAAA;IAAE,+CAAM,CAAA;AAAA,CAAC,EAAnD,UAAU,GAAV,kBAAU,KAAV,kBAAU,QAAyC;AAAA,CAAC;AAQhE;;GAEG;AACH,MAAa,UAAU;IAGnB;;;;;;;;;;OAUG;IAEL,YACc,IAAY,EACZ,QAAgB,EAChB,KAAiB,EACjB,aAAqB,EACrB,OAAe,EACf,MAAc,EACd,IAAY,EACZ,KAAa;QAPb,SAAI,GAAJ,IAAI,CAAQ;QACZ,aAAQ,GAAR,QAAQ,CAAQ;QAChB,UAAK,GAAL,KAAK,CAAY;QACjB,kBAAa,GAAb,aAAa,CAAQ;QACrB,YAAO,GAAP,OAAO,CAAQ;QACf,WAAM,GAAN,MAAM,CAAQ;QACd,SAAI,GAAJ,IAAI,CAAQ;QACZ,UAAK,GAAL,KAAK,CAAQ;QAErB,IAAI,CAAC,sBAAsB,GAAG,CAAC,CAAC,eAAe,EAAE,aAAa,CAAC,EAAE,CAAC,SAAS,EAAE,OAAO,CAAC,EAAE,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC,CAAC;IAC/G,CAAC;IAED,sDAAsD;IACtD,OAAO;QACH,OAAO,IAAI,CAAC,IAAI,CAAC;IACrB,CAAC;IAED,sDAAsD;IACtD,QAAQ;QACJ,OAAO,IAAI,CAAC,KAAK,CAAC;IACtB,CAAC;IAED,sDAAsD;IACtD,WAAW;QACP,OAAO,IAAI,CAAC,OAAO,CAAC;IACxB,CAAC;IAED,sDAAsD;IACtD,gBAAgB;QACZ,OAAO,IAAI,CAAC,aAAa,CAAC;IAC9B,CAAC;IAED,sDAAsD;IACtD,SAAS;QACL,OAAO,IAAI,CAAC,MAAM,CAAC;IACvB,CAAC;IAED,sDAAsD;IACtD,QAAQ;QACJ,OAAO,IAAI,CAAC,KAAK,CAAC;IACtB,CAAC;CACJ;AAzDD,gCAyDC","sourcesContent":["/**\n  * Universidad de La Laguna\n  * Escuela Superior de Ingeniería y Tecnología\n  * Grado en Ingeniería Informática\n  * Desarrollo de sistemas\n  * Curso: 3º\n  * Editor: Visual Studio Code\n  *\n  * @file practica-7.ts\n  * @version 1.0\n  * @author Grupo B\n  * @date 7 de Abril 2021\n  * @brief Data model of a system that allows menu design\n*/\n\n/**\n * @brief For each ingredient considered within the menu design system, the following information must be stored:\n * @brief group1: meat, fish, eggs, tofu, nuts, seeds, and legumes\n * @brief group2: Vegetables and greens\n * @brief group3: Milk and derivatives\n * @brief group4: Cereals\n * @brief group5: Fruits\n */\nexport enum ingredient {group1, group2, group3, group4, group5};\n\n/**\n * @brief String --> Macronutrients: Carbohydrates, proteins and lipids.\n * @brief number --> kcal\n */\nexport type NutritionalComposition = [string, number];\n\n/**\n * @brief Class that create an ingredient\n */\nexport class Ingredient {\n    private nutritionalComposition: NutritionalComposition[];\n\n    /**\n     * @rbief Constructor of the class ingredient\n     * @param name Ingredient name\n     * @param location Ingredient location\n     * @param group Food group which the ingredient belongs\n     * @param carbohydrates Macronutrient\n     * @param protein Macronutrient\n     * @param lipids Macronutrient\n     * @param kcal Ingredient kilocalories\n     * @param price Ingredient price\n     */\n\n  constructor(\n        private name: string,\n        private location: string,\n        private group: ingredient,\n        private carbohydrates: number,\n        private protein: number,\n        private lipids: number,\n        private kcal: number,\n        private price: number,\n    ) {\n        this.nutritionalComposition = [[\"carbohydrates\", carbohydrates], [\"protein\", protein], [\"lipids\", lipids]];\n    }\n\n    // Método implementado para hacer pruebas clase Dish. \n    getName() {\n        return this.name;\n    }\n\n    // Método implementado para hacer pruebas clase Dish. \n    getGroup() {\n        return this.group;\n    }\n\n    // Método implementado para hacer pruebas clase Dish. \n    getProteins() {\n        return this.protein;\n    }\n\n    // Método implementado para hacer pruebas clase Dish. \n    getCarbohydrates() {\n        return this.carbohydrates;\n    }\n\n    // Método implementado para hacer pruebas clase Dish. \n    getLipids() {\n        return this.lipids;\n    }\n\n    // Método implementado para hacer pruebas clase Dish. \n    getPrice() {\n        return this.price;\n    }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"e41043081879fc1a06e93410cf70f7c4cd9423da","contentHash":"68940e7a687420d53509a2f4616e1595bd9c219128c63a9fdcb8a478c96b958a"},"/home/usuario/ull-esit-inf-dsi-20-21-prct07-menu-datamodel-grupo-b/ejercicios/src/claseDish.ts":{"path":"/home/usuario/ull-esit-inf-dsi-20-21-prct07-menu-datamodel-grupo-b/ejercicios/src/claseDish.ts","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":3,"column":62}},"1":{"start":{"line":4,"column":0},"end":{"line":4,"column":22}},"2":{"start":{"line":5,"column":26},"end":{"line":5,"column":54}},"3":{"start":{"line":21,"column":8},"end":{"line":21,"column":33}},"4":{"start":{"line":22,"column":8},"end":{"line":22,"column":27}},"5":{"start":{"line":23,"column":8},"end":{"line":23,"column":35}},"6":{"start":{"line":24,"column":8},"end":{"line":24,"column":87}},"7":{"start":{"line":24,"column":41},"end":{"line":24,"column":85}},"8":{"start":{"line":31,"column":8},"end":{"line":31,"column":29}},"9":{"start":{"line":39,"column":29},"end":{"line":39,"column":31}},"10":{"start":{"line":42,"column":24},"end":{"line":42,"column":55}},"11":{"start":{"line":43,"column":8},"end":{"line":45,"column":9}},"12":{"start":{"line":43,"column":21},"end":{"line":43,"column":22}},"13":{"start":{"line":44,"column":12},"end":{"line":44,"column":44}},"14":{"start":{"line":52,"column":8},"end":{"line":52,"column":30}},"15":{"start":{"line":59,"column":8},"end":{"line":59,"column":26}},"16":{"start":{"line":67,"column":8},"end":{"line":67,"column":37}},"17":{"start":{"line":78,"column":8},"end":{"line":80,"column":9}},"18":{"start":{"line":79,"column":12},"end":{"line":79,"column":63}},"19":{"start":{"line":88,"column":23},"end":{"line":88,"column":25}},"20":{"start":{"line":91,"column":25},"end":{"line":91,"column":82}},"21":{"start":{"line":92,"column":21},"end":{"line":92,"column":22}},"22":{"start":{"line":93,"column":22},"end":{"line":93,"column":24}},"23":{"start":{"line":95,"column":8},"end":{"line":97,"column":9}},"24":{"start":{"line":95,"column":21},"end":{"line":95,"column":22}},"25":{"start":{"line":96,"column":12},"end":{"line":96,"column":29}},"26":{"start":{"line":98,"column":23},"end":{"line":98,"column":46}},"27":{"start":{"line":99,"column":28},"end":{"line":99,"column":43}},"28":{"start":{"line":101,"column":8},"end":{"line":105,"column":9}},"29":{"start":{"line":102,"column":24},"end":{"line":102,"column":54}},"30":{"start":{"line":103,"column":12},"end":{"line":103,"column":28}},"31":{"start":{"line":104,"column":12},"end":{"line":104,"column":44}},"32":{"start":{"line":108,"column":8},"end":{"line":113,"column":9}},"33":{"start":{"line":108,"column":21},"end":{"line":108,"column":22}},"34":{"start":{"line":109,"column":12},"end":{"line":112,"column":13}},"35":{"start":{"line":110,"column":16},"end":{"line":110,"column":38}},"36":{"start":{"line":111,"column":16},"end":{"line":111,"column":27}},"37":{"start":{"line":116,"column":12},"end":{"line":116,"column":44}},"38":{"start":{"line":120,"column":8},"end":{"line":122,"column":9}},"39":{"start":{"line":121,"column":12},"end":{"line":121,"column":22}},"40":{"start":{"line":123,"column":8},"end":{"line":123,"column":22}},"41":{"start":{"line":133,"column":24},"end":{"line":133,"column":55}},"42":{"start":{"line":134,"column":33},"end":{"line":134,"column":34}},"43":{"start":{"line":135,"column":28},"end":{"line":135,"column":29}},"44":{"start":{"line":136,"column":26},"end":{"line":136,"column":27}},"45":{"start":{"line":137,"column":8},"end":{"line":141,"column":11}},"46":{"start":{"line":138,"column":12},"end":{"line":138,"column":85}},"47":{"start":{"line":139,"column":12},"end":{"line":139,"column":75}},"48":{"start":{"line":140,"column":12},"end":{"line":140,"column":71}},"49":{"start":{"line":142,"column":8},"end":{"line":142,"column":64}},"50":{"start":{"line":150,"column":24},"end":{"line":150,"column":55}},"51":{"start":{"line":151,"column":20},"end":{"line":151,"column":21}},"52":{"start":{"line":152,"column":8},"end":{"line":154,"column":11}},"53":{"start":{"line":153,"column":12},"end":{"line":153,"column":65}},"54":{"start":{"line":155,"column":8},"end":{"line":155,"column":21}},"55":{"start":{"line":164,"column":34},"end":{"line":164,"column":36}},"56":{"start":{"line":165,"column":24},"end":{"line":165,"column":55}},"57":{"start":{"line":168,"column":8},"end":{"line":172,"column":11}},"58":{"start":{"line":169,"column":12},"end":{"line":171,"column":13}},"59":{"start":{"line":170,"column":16},"end":{"line":170,"column":53}},"60":{"start":{"line":173,"column":8},"end":{"line":175,"column":9}},"61":{"start":{"line":173,"column":21},"end":{"line":173,"column":22}},"62":{"start":{"line":174,"column":12},"end":{"line":174,"column":60}},"63":{"start":{"line":183,"column":8},"end":{"line":183,"column":38}},"64":{"start":{"line":186,"column":0},"end":{"line":186,"column":20}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":20,"column":4},"end":{"line":20,"column":5}},"loc":{"start":{"line":20,"column":46},"end":{"line":25,"column":5}},"line":20},"1":{"name":"(anonymous_1)","decl":{"start":{"line":24,"column":28},"end":{"line":24,"column":29}},"loc":{"start":{"line":24,"column":41},"end":{"line":24,"column":85}},"line":24},"2":{"name":"(anonymous_2)","decl":{"start":{"line":30,"column":4},"end":{"line":30,"column":5}},"loc":{"start":{"line":30,"column":18},"end":{"line":32,"column":5}},"line":30},"3":{"name":"(anonymous_3)","decl":{"start":{"line":38,"column":4},"end":{"line":38,"column":5}},"loc":{"start":{"line":38,"column":21},"end":{"line":53,"column":5}},"line":38},"4":{"name":"(anonymous_4)","decl":{"start":{"line":58,"column":4},"end":{"line":58,"column":5}},"loc":{"start":{"line":58,"column":18},"end":{"line":60,"column":5}},"line":58},"5":{"name":"(anonymous_5)","decl":{"start":{"line":66,"column":4},"end":{"line":66,"column":5}},"loc":{"start":{"line":66,"column":26},"end":{"line":68,"column":5}},"line":66},"6":{"name":"(anonymous_6)","decl":{"start":{"line":76,"column":4},"end":{"line":76,"column":5}},"loc":{"start":{"line":76,"column":30},"end":{"line":81,"column":5}},"line":76},"7":{"name":"(anonymous_7)","decl":{"start":{"line":87,"column":4},"end":{"line":87,"column":5}},"loc":{"start":{"line":87,"column":23},"end":{"line":124,"column":5}},"line":87},"8":{"name":"checkMaximumUnique","decl":{"start":{"line":115,"column":17},"end":{"line":115,"column":35}},"loc":{"start":{"line":115,"column":51},"end":{"line":117,"column":9}},"line":115},"9":{"name":"(anonymous_9)","decl":{"start":{"line":132,"column":4},"end":{"line":132,"column":5}},"loc":{"start":{"line":132,"column":29},"end":{"line":143,"column":5}},"line":132},"10":{"name":"(anonymous_10)","decl":{"start":{"line":137,"column":24},"end":{"line":137,"column":25}},"loc":{"start":{"line":137,"column":37},"end":{"line":141,"column":9}},"line":137},"11":{"name":"(anonymous_11)","decl":{"start":{"line":149,"column":4},"end":{"line":149,"column":5}},"loc":{"start":{"line":149,"column":17},"end":{"line":156,"column":5}},"line":149},"12":{"name":"(anonymous_12)","decl":{"start":{"line":152,"column":24},"end":{"line":152,"column":25}},"loc":{"start":{"line":152,"column":37},"end":{"line":154,"column":9}},"line":152},"13":{"name":"(anonymous_13)","decl":{"start":{"line":163,"column":4},"end":{"line":163,"column":5}},"loc":{"start":{"line":163,"column":43},"end":{"line":176,"column":5}},"line":163},"14":{"name":"(anonymous_14)","decl":{"start":{"line":168,"column":24},"end":{"line":168,"column":25}},"loc":{"start":{"line":168,"column":37},"end":{"line":172,"column":9}},"line":168},"15":{"name":"(anonymous_15)","decl":{"start":{"line":182,"column":4},"end":{"line":182,"column":5}},"loc":{"start":{"line":182,"column":27},"end":{"line":184,"column":5}},"line":182}},"branchMap":{"0":{"loc":{"start":{"line":78,"column":8},"end":{"line":80,"column":9}},"type":"if","locations":[{"start":{"line":78,"column":8},"end":{"line":80,"column":9}},{"start":{"line":78,"column":8},"end":{"line":80,"column":9}}],"line":78},"1":{"loc":{"start":{"line":109,"column":12},"end":{"line":112,"column":13}},"type":"if","locations":[{"start":{"line":109,"column":12},"end":{"line":112,"column":13}},{"start":{"line":109,"column":12},"end":{"line":112,"column":13}}],"line":109},"2":{"loc":{"start":{"line":120,"column":8},"end":{"line":122,"column":9}},"type":"if","locations":[{"start":{"line":120,"column":8},"end":{"line":122,"column":9}},{"start":{"line":120,"column":8},"end":{"line":122,"column":9}}],"line":120},"3":{"loc":{"start":{"line":169,"column":12},"end":{"line":171,"column":13}},"type":"if","locations":[{"start":{"line":169,"column":12},"end":{"line":171,"column":13}},{"start":{"line":169,"column":12},"end":{"line":171,"column":13}}],"line":169}},"s":{"0":1,"1":1,"2":1,"3":13,"4":13,"5":13,"6":13,"7":17,"8":1,"9":1,"10":1,"11":1,"12":1,"13":2,"14":1,"15":2,"16":5,"17":3,"18":2,"19":7,"20":7,"21":7,"22":7,"23":7,"24":7,"25":35,"26":7,"27":7,"28":7,"29":16,"30":16,"31":16,"32":7,"33":7,"34":35,"35":14,"36":14,"37":35,"38":7,"39":2,"40":5,"41":13,"42":13,"43":13,"44":13,"45":13,"46":16,"47":16,"48":16,"49":13,"50":5,"51":5,"52":5,"53":9,"54":5,"55":1,"56":1,"57":1,"58":4,"59":1,"60":1,"61":1,"62":1,"63":1,"64":1},"f":{"0":13,"1":17,"2":1,"3":1,"4":2,"5":5,"6":3,"7":7,"8":35,"9":13,"10":16,"11":5,"12":9,"13":1,"14":4,"15":1},"b":{"0":[2,1],"1":[14,21],"2":[2,5],"3":[1,3]},"inputSourceMap":{"version":3,"file":"/home/usuario/ull-esit-inf-dsi-20-21-prct07-menu-datamodel-grupo-b/ejercicios/src/claseDish.ts","sources":["/home/usuario/ull-esit-inf-dsi-20-21-prct07-menu-datamodel-grupo-b/ejercicios/src/claseDish.ts"],"names":[],"mappings":"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","sourcesContent":["// Clase Plato.\n\nimport {Ingredient} from './classIngredient';\nimport {ingredient} from './classIngredient';\n\n/**\n * @enum Defines what kind of dish is.\n */\nexport const enum tipoPlato {ENTRANTE, PRIMER_PLATO, SEGUNDO_PLATO, POSTRE};              \n\n/**\n * A class that conforms a dish made of a series of diverse ingredients and\n * methods that let configure the dish, adding and/or removing those\n * ingredients.\n * @class class Dish\n */\nexport class Dish {\n  /**\n   * @member A Map : Keys are object of class _Ingredient_, values are the\n   * weight of each ingredient (in grams).\n   */\n  private Ingredients: Map<Ingredient, number>;\n\n  /**\n   * @param dishName The name of the dish.\n   * @param ingredients An Array (tuple of two elements). Each element presents\n   * and object _Ingredient_ and a number (weight in grams).\n   * @param plato The type of the dish.\n   */\n  constructor(private dishName: string, ingredients: [Ingredient, number][],\n      private plato: tipoPlato ) {\n    this.Ingredients = new Map;\n\n    ingredients.forEach((element) => this.Ingredients.set(element[0],\n      element[1]));\n  }\n\n  /**\n   * A getter method which returns the dish name.\n   * @returns A string with the name of the dish.\n   */\n  getDishName(): string {\n    return this.dishName;\n  }\n  \n  /**\n   * A getter. Returns all the ingredients of the dish and each amount of these.\n   * @returns An array (a tuple), in which each element is made of an object\n   * _ingredient_ and a number that represents the ingredient weight in grams.\n   */\n  getIngredients(): [Ingredient, number][] {\n    let allIngredients: [Ingredient, number][] = [];\n\n    // We use the spread operator to convert the Map entries in array elements\n    // and store in an array.\n    const entries = [...this.Ingredients.entries()];\n\n    for(let i = 0; i < entries.length; ++i) {\n      allIngredients.push(entries[i]);\n    }\n\n    // Another way to convert a Map to a tuple array.\n    /*\n    for(let[key, value] of this.Ingredients) {\n      allIngredients.push([key, value]);\n    }\n    */\n\n    return allIngredients;\n  }\n\n  /**\n   * A getter returning the type of the dish.\n   * @returns A enum _tipoPlato_ with the type of the dish.\n   */\n  getDishType(): tipoPlato {\n    return this.plato;\n  }\n\n  /**\n   * Returns the number of ingredients that the dish is made of.\n   * @returns A _number_ representing the number of ingredients that the dish\n   * consist of.\n   */\n  numberOfIngredients(): number {\n    return this.Ingredients.size;\n  }\n\n  /**\n   * Method that let us add a new ingredient to the dish. Ingredients already\n   * present can not be added another time. The exact same ingredient only can\n   * be added once.\n   * @param ingredient A tuple of two variables: the first one is a _Ingredient_\n   * objetc. The second one is a number, the grams of the ingredient.\n   */\n  addIngredient(ingredient: [Ingredient, number]): void {\n    // If the same exact ingredient doesn't exists inside the map.\n    if(!this.Ingredients.get(ingredient[0])) {\n      this.Ingredients.set(ingredient[0], ingredient[1]);\n    }\n  }\n\n  /**\n   * Analyzes the dish aliment groups and calculates which is the more abundant.\n   * @returns An _ingredient_ enum value, the more repeated of alls. Returns the\n   * value -1 if there is no unique predominant group of aliments.\n   */\n  predominantGroup(): ingredient {\n    let counters = [];\n    // With this we get the number of entries in a non-string enumerable in\n    // Typescript.\n    let enumLength = (Object.entries(ingredient)).length / 2;\n    let result: number = 0;\n    let maximum: number = -1;\n\n    // Create an array the same size enum \"ingredient\", full of 0's\n    for(let i = 0; i < enumLength; ++i) {\n      counters.push(0);\n    }\n\n    let iterator: IterableIterator<Ingredient> = this.Ingredients.keys();\n\n    let actualElement: IteratorResult<Ingredient> = iterator.next();\n\n    // Calculating number of ingredients by group\n    while(!actualElement.done) {\n      const aux = actualElement.value.getGroup();\n      ++counters[aux];\n\n      actualElement = iterator.next();\n    }\n\n    // Getting the maximum value of the array and its \n    // supossedly position \n    for(let i = 0; i < counters.length; ++i) {\n      if(counters[i]> maximum) {\n        maximum = counters[i];\n        result = i;\n      }\n    }\n\n    // Checking if the maximum value is unique\n    function checkMaximumUnique(valuePosition: number) {\n      return valuePosition == maximum;\n    }\n    \n    // If there is more than a maximum value... there is no\n    // maximum value in reality.\n    if (counters.filter(checkMaximumUnique).length > 1) {\n      return -1;\n    }\n\n    return result;\n  }\n\n  /**\n   * Calculates the total dish nutritional composition. Totals of carbohydrates,\n   * proteins and lipids\n   * @returns An array with the carbohydrates total (1º element), proteins total\n   * (2º element) and lipids total (3º element).\n   * total.\n   */\n  nutritionalComposition(): [number, number, number] {\n    const entries = [...this.Ingredients.entries()];\n\n\n    let totalCarbohydrates = 0; \n    let totalProteins = 0;\n    let totalLipids = 0;\n\n    entries.forEach((element) => {\n      totalCarbohydrates += (element[0].getCarbohydrates() / 100) * element[1];\n      totalProteins += (element[0].getProteins() / 100) * element[1];\n      totalLipids += (element[0].getLipids() / 100) * element[1];\n    });\n\n    return [totalCarbohydrates, totalProteins, totalLipids];\n  }\n\n  /**\n   * Calculates the dish total price based in the cost of each ingredient used.\n   * @returns The raw total price of the dish : A sum of each ingredient cost\n   * by weight (euros by kilogram used).\n   */\n  totalPrice(): number {\n    const entries = [...this.Ingredients.entries()];\n    let total = 0;\n\n    entries.forEach((element) => {\n      total += (element[1] / 1000) * element[0].getPrice();\n    });\n\n    return total;\n  }\n\n  /**\n   * Remove all dish ingredients whose name match the argument passed by this\n   * method. \n   * @param ingredientName Name of the ingredient we want to remove from the\n   * dish.\n   */\n  deleteIngredientByName(ingredientName: string): void {\n    let ingredientsToRemove: Ingredient[] = [];\n    const entries = [...this.Ingredients.entries()];\n\n    // Get all the ingredients with the same name as the argument and store\n    // them in an array.\n    entries.forEach((element) => {\n      if(element[0].getName() == ingredientName) {\n        ingredientsToRemove.push(element[0]);\n      }\n    });\n\n    for(let i = 0; i < ingredientsToRemove.length; ++i) {\n      this.Ingredients.delete(ingredientsToRemove[i]);\n    }\n  }\n\n  /**\n   * Removes the ingredient from the dish  \n   * @param ingr An _Ingredient_ object. Deletes the exact match of that object\n   * in the dish if it exists.\n   */\n  deleteIngredient(ingr: Ingredient): void {\n    this.Ingredients.delete(ingr);\n  }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"8bd386e644ce16b1b5b65cb4cad62bc02328ba74","contentHash":"528a6ac89b71edca47c400fb3d90bdf248457f937627c3ef6cd31fff55c858a2"},"/home/usuario/ull-esit-inf-dsi-20-21-prct07-menu-datamodel-grupo-b/ejercicios/src/classMenu.ts":{"path":"/home/usuario/ull-esit-inf-dsi-20-21-prct07-menu-datamodel-grupo-b/ejercicios/src/classMenu.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":22}},"2":{"start":{"line":6,"column":8},"end":{"line":6,"column":29}},"3":{"start":{"line":13,"column":8},"end":{"line":13,"column":31}},"4":{"start":{"line":20,"column":8},"end":{"line":20,"column":27}},"5":{"start":{"line":28,"column":29},"end":{"line":28,"column":30}},"6":{"start":{"line":29,"column":8},"end":{"line":31,"column":11}},"7":{"start":{"line":30,"column":12},"end":{"line":30,"column":51}},"8":{"start":{"line":32,"column":8},"end":{"line":32,"column":41}},"9":{"start":{"line":38,"column":19},"end":{"line":38,"column":21}},"10":{"start":{"line":39,"column":8},"end":{"line":41,"column":11}},"11":{"start":{"line":40,"column":12},"end":{"line":40,"column":73}},"12":{"start":{"line":42,"column":8},"end":{"line":42,"column":20}},"13":{"start":{"line":50,"column":26},"end":{"line":50,"column":35}},"14":{"start":{"line":51,"column":8},"end":{"line":55,"column":11}},"15":{"start":{"line":52,"column":12},"end":{"line":52,"column":66}},"16":{"start":{"line":53,"column":12},"end":{"line":53,"column":66}},"17":{"start":{"line":54,"column":12},"end":{"line":54,"column":66}},"18":{"start":{"line":56,"column":8},"end":{"line":56,"column":27}},"19":{"start":{"line":63,"column":19},"end":{"line":63,"column":21}},"20":{"start":{"line":64,"column":8},"end":{"line":66,"column":11}},"21":{"start":{"line":65,"column":12},"end":{"line":65,"column":50}},"22":{"start":{"line":67,"column":8},"end":{"line":67,"column":20}},"23":{"start":{"line":70,"column":0},"end":{"line":70,"column":20}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":4},"end":{"line":5,"column":5}},"loc":{"start":{"line":5,"column":24},"end":{"line":7,"column":5}},"line":5},"1":{"name":"(anonymous_1)","decl":{"start":{"line":12,"column":4},"end":{"line":12,"column":5}},"loc":{"start":{"line":12,"column":18},"end":{"line":14,"column":5}},"line":12},"2":{"name":"(anonymous_2)","decl":{"start":{"line":19,"column":4},"end":{"line":19,"column":5}},"loc":{"start":{"line":19,"column":16},"end":{"line":21,"column":5}},"line":19},"3":{"name":"(anonymous_3)","decl":{"start":{"line":27,"column":4},"end":{"line":27,"column":5}},"loc":{"start":{"line":27,"column":16},"end":{"line":33,"column":5}},"line":27},"4":{"name":"(anonymous_4)","decl":{"start":{"line":29,"column":28},"end":{"line":29,"column":29}},"loc":{"start":{"line":29,"column":39},"end":{"line":31,"column":9}},"line":29},"5":{"name":"(anonymous_5)","decl":{"start":{"line":37,"column":4},"end":{"line":37,"column":5}},"loc":{"start":{"line":37,"column":17},"end":{"line":43,"column":5}},"line":37},"6":{"name":"(anonymous_6)","decl":{"start":{"line":39,"column":28},"end":{"line":39,"column":29}},"loc":{"start":{"line":39,"column":39},"end":{"line":41,"column":9}},"line":39},"7":{"name":"(anonymous_7)","decl":{"start":{"line":49,"column":4},"end":{"line":49,"column":5}},"loc":{"start":{"line":49,"column":29},"end":{"line":57,"column":5}},"line":49},"8":{"name":"(anonymous_8)","decl":{"start":{"line":51,"column":28},"end":{"line":51,"column":29}},"loc":{"start":{"line":51,"column":39},"end":{"line":55,"column":9}},"line":51},"9":{"name":"(anonymous_9)","decl":{"start":{"line":62,"column":4},"end":{"line":62,"column":5}},"loc":{"start":{"line":62,"column":20},"end":{"line":68,"column":5}},"line":62},"10":{"name":"(anonymous_10)","decl":{"start":{"line":64,"column":28},"end":{"line":64,"column":29}},"loc":{"start":{"line":64,"column":39},"end":{"line":66,"column":9}},"line":64}},"branchMap":{},"s":{"0":1,"1":1,"2":6,"3":0,"4":1,"5":1,"6":1,"7":4,"8":1,"9":0,"10":0,"11":0,"12":0,"13":1,"14":1,"15":4,"16":4,"17":4,"18":1,"19":1,"20":1,"21":4,"22":1,"23":1},"f":{"0":6,"1":0,"2":1,"3":1,"4":4,"5":0,"6":0,"7":1,"8":4,"9":1,"10":4},"b":{},"inputSourceMap":{"version":3,"file":"/home/usuario/ull-esit-inf-dsi-20-21-prct07-menu-datamodel-grupo-b/ejercicios/src/classMenu.ts","sources":["/home/usuario/ull-esit-inf-dsi-20-21-prct07-menu-datamodel-grupo-b/ejercicios/src/classMenu.ts"],"names":[],"mappings":";;;AAKA,MAAa,IAAI;IAMb,YAAa,MAAkB;QAC3B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACzB,CAAC;IACD;;;OAGG;IACH,OAAO,CAAC,IAAU;QACd,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC3B,CAAC;IAED;;;OAGG;IACH,SAAS;QACL,OAAO,IAAI,CAAC,MAAM,CAAC;IACvB,CAAC;IACD;;;;OAIG;IACH,IAAI,KAAK;QACL,IAAI,cAAc,GAAG,CAAC,CAAC;QACvB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;YAC1B,cAAc,IAAI,OAAO,CAAC,UAAU,EAAE,CAAC;QAC3C,CAAC,CAAC,CAAC;QACH,OAAO,cAAc,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IACrC,CAAC;IACD;;OAEG;IACH,UAAU;QACN,IAAI,IAAI,GAAgD,EAAE,CAAA;QAE1D,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;YAC1B,IAAI,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,WAAW,EAAE,EAAE,OAAO,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC;QACjE,CAAC,CAAC,CAAC;QAEH,OAAO,IAAI,CAAC;IAChB,CAAC;IACD;;;;OAIG;IACH,sBAAsB;QAClB,IAAI,WAAW,GAAmB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAC5C,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;YAC1B,WAAW,CAAC,CAAC,CAAC,IAAI,OAAO,CAAC,sBAAsB,EAAE,CAAC,CAAC,CAAC,CAAC;YACtD,WAAW,CAAC,CAAC,CAAC,IAAI,OAAO,CAAC,sBAAsB,EAAE,CAAC,CAAC,CAAC,CAAC;YACtD,WAAW,CAAC,CAAC,CAAC,IAAI,OAAO,CAAC,sBAAsB,EAAE,CAAC,CAAC,CAAC,CAAC;QAC1D,CAAC,CAAC,CAAC;QACH,OAAO,WAAW,CAAC;IACvB,CAAC;IACD;;;OAGG;IACH,aAAa;QACT,IAAI,IAAI,GAAqB,EAAE,CAAC;QAChC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;YAC1B,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,gBAAgB,EAAE,CAAC,CAAC;QAE1C,CAAC,CAAC,CAAC;QACH,OAAO,IAAI,CAAC;IAChB,CAAC;CACJ;AA1ED,oBA0EC","sourcesContent":["import {Dish} from './claseDish';\nimport {tipoPlato} from './claseDish';\nimport {ingredient, Ingredient} from './classIngredient';\n\n\nexport class Menu {\n    /**\n     * Attribute, as array, to save the list of menu dishes.\n     */\n    private dishes: Array<Dish>;\n\n    constructor (dishes:Array<Dish>) {\n        this.dishes = dishes;\n    }\n    /**\n     * Method that adds a new Dish to the menu array.\n     * @param dish New Dish \n     */\n    addDish(dish: Dish) {\n        this.dishes.push(dish);\n    }\n\n    /**\n     * Getter method that return the array of dishes of the menu\n     * @returns {Array<Dish>} Array of dishes\n     */\n    getDishes(): Array<Dish> {\n        return this.dishes;\n    }\n    /**\n     * Getter method that returns the price of the meni, it is achieved\n     * with the sum of the price of each Dish.\n     * @returns A number with the total price\n     */\n    get price() {\n        let sumPriceDishes = 0;\n        this.dishes.forEach(element => {\n            sumPriceDishes += element.totalPrice();\n        });\n        return sumPriceDishes.toFixed(2);\n    }\n    /**\n     * Enter the name of the dish together with its ingredients.\n     */\n    dishesList() {\n        let list:Array<[string, Array<[Ingredient, Number]>]> = []\n\n        this.dishes.forEach(element => {\n            list.push([element.getDishName(), element.getIngredients()]);\n        });\n\n        return list;\n    }\n    /**\n     * Method that calculates the total nutritional composition of \n     * the menu based on that of each dish.\n     * @returns Returns an array with [carbohydrates, proteins, lipids]\n     */\n    nutritionalComposition() :Array<number> {\n        let composition : Array<number> = [0, 0, 0];\n        this.dishes.forEach(element => {\n            composition[0] += element.nutritionalComposition()[0];\n            composition[1] += element.nutritionalComposition()[1];\n            composition[2] += element.nutritionalComposition()[2];\n        });\n        return composition;\n    }\n    /**\n     * Returns an array with the list of food groups n the menu in their \n     * orden of appearance. \n     */\n    foodGroupList() : Array<ingredient> {\n        let list:Array<ingredient> = [];\n        this.dishes.forEach(element => {\n            list.push(element.predominantGroup());\n            \n        });\n        return list;\n    }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"6cc34d6356feb3107aeeb6cc76bdeadb2074be36","contentHash":"4e56560f079a7017c90ea133c8e0a67fa939ea052fc62df80d143a12777fbe1a"},"/home/usuario/ull-esit-inf-dsi-20-21-prct07-menu-datamodel-grupo-b/ejercicios/src/classMenuList.ts":{"path":"/home/usuario/ull-esit-inf-dsi-20-21-prct07-menu-datamodel-grupo-b/ejercicios/src/classMenuList.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":26}},"2":{"start":{"line":4,"column":20},"end":{"line":4,"column":42}},"3":{"start":{"line":12,"column":8},"end":{"line":12,"column":27}},"4":{"start":{"line":13,"column":8},"end":{"line":13,"column":29}},"5":{"start":{"line":20,"column":8},"end":{"line":20,"column":30}},"6":{"start":{"line":27,"column":8},"end":{"line":27,"column":31}},"7":{"start":{"line":34,"column":8},"end":{"line":34,"column":26}},"8":{"start":{"line":41,"column":8},"end":{"line":41,"column":27}},"9":{"start":{"line":50,"column":21},"end":{"line":50,"column":23}},"10":{"start":{"line":51,"column":8},"end":{"line":53,"column":11}},"11":{"start":{"line":52,"column":12},"end":{"line":52,"column":47}},"12":{"start":{"line":54,"column":19},"end":{"line":54,"column":47}},"13":{"start":{"line":55,"column":8},"end":{"line":55,"column":27}},"14":{"start":{"line":58,"column":0},"end":{"line":58,"column":28}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":11,"column":4},"end":{"line":11,"column":5}},"loc":{"start":{"line":11,"column":31},"end":{"line":14,"column":5}},"line":11},"1":{"name":"(anonymous_1)","decl":{"start":{"line":19,"column":4},"end":{"line":19,"column":5}},"loc":{"start":{"line":19,"column":18},"end":{"line":21,"column":5}},"line":19},"2":{"name":"(anonymous_2)","decl":{"start":{"line":26,"column":4},"end":{"line":26,"column":5}},"loc":{"start":{"line":26,"column":18},"end":{"line":28,"column":5}},"line":26},"3":{"name":"(anonymous_3)","decl":{"start":{"line":33,"column":4},"end":{"line":33,"column":5}},"loc":{"start":{"line":33,"column":15},"end":{"line":35,"column":5}},"line":33},"4":{"name":"(anonymous_4)","decl":{"start":{"line":40,"column":4},"end":{"line":40,"column":5}},"loc":{"start":{"line":40,"column":16},"end":{"line":42,"column":5}},"line":40},"5":{"name":"(anonymous_5)","decl":{"start":{"line":49,"column":4},"end":{"line":49,"column":5}},"loc":{"start":{"line":49,"column":26},"end":{"line":56,"column":5}},"line":49},"6":{"name":"(anonymous_6)","decl":{"start":{"line":51,"column":29},"end":{"line":51,"column":30}},"loc":{"start":{"line":51,"column":37},"end":{"line":53,"column":9}},"line":51}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":2,"6":1,"7":3,"8":2,"9":1,"10":1,"11":3,"12":1,"13":1,"14":1},"f":{"0":1,"1":2,"2":1,"3":3,"4":2,"5":1,"6":3},"b":{},"inputSourceMap":{"version":3,"file":"/home/usuario/ull-esit-inf-dsi-20-21-prct07-menu-datamodel-grupo-b/ejercicios/src/classMenuList.ts","sources":["/home/usuario/ull-esit-inf-dsi-20-21-prct07-menu-datamodel-grupo-b/ejercicios/src/classMenuList.ts"],"names":[],"mappings":";;;AAAA,2CAAiC;AAGjC,MAAa,QAAQ;IAUnB;;;;OAIG;IACH,YAAY,KAAkB,EAAE,MAAmB;QACjD,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACvB,CAAC;IAED;;;OAGG;IACH,OAAO,CAAC,IAAU;QAChB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACxB,CAAC;IAED;;;OAGG;IACH,OAAO,CAAC,IAAU;QAChB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACzB,CAAC;IAED;;;OAGG;IACH,QAAQ;QACN,OAAO,IAAI,CAAC,KAAK,CAAC;IACpB,CAAC;IAED;;;OAGG;IACH,SAAS;QACP,OAAO,IAAI,CAAC,MAAM,CAAC;IACrB,CAAC;IAED;;;;;OAKG;IACH,OAAO,CAAC,YAA2B;QACjC,IAAI,MAAM,GAAgB,EAAE,CAAC;QAE7B,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;YAC1B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC;QACrC,CAAC,CAAC,CAAC;QACH,IAAI,IAAI,GAAG,IAAI,gBAAI,CAAC,MAAM,CAAC,CAAC;QAE5B,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IACrB,CAAC;CACF;AApED,4BAoEC","sourcesContent":["import {Menu} from \"./classMenu\";\nimport {Dish} from './claseDish';\n\nexport class MenuList {\n  /**\n   * Attribute, as array, to save the list of menus.\n   */\n  private menus: Array<Menu>;\n  /**\n   * Attribute, as array, to save the list of dishes.\n   */\n  private dishes: Array<Dish>;\n\n  /**\n   * Constructor method\n   * @param {Array<Menu>} menus Array of the menus of the menu list\n   * @param {Array<Dish>} dishes Array of the dishes of the menu list\n   */\n  constructor(menus: Array<Menu>, dishes: Array<Dish>) {\n    this.menus = menus;\n    this.dishes = dishes;\n  }\n\n  /**\n   * Method that allow us to add a new menu to the menu list\n   * @param {Menu} menu New menu \n   */\n  addMenu(menu: Menu) {\n    this.menus.push(menu);\n  }\n\n  /**\n   * Method that allow us to add a new dish to the menu list\n   * @param {Dish} dish New dish\n   */\n  addDish(dish: Dish) {\n    this.dishes.push(dish);\n  }\n\n  /**\n   * Getter method  that return us the array of menus of our menu list\n   * @returns {Array<Menu>} Array with the menus\n   */\n  getMenus(): Array<Menu> {\n    return this.menus;\n  }\n\n  /**\n   * Getter method  that return us the array of dishes of our menu list\n   * @returns {Array<Dish>} Array of the dishes\n   */\n  getDishes(): Array<Dish> {\n    return this.dishes;\n  }\n\n  /**\n   * Method to create a new menu with some of the \n   * existing dishes in our menu list\n   * @param {Array<Dish>} numberDishes Array that indicate the number of the dishes\n   * that we want to put in our new menu\n   */\n  newMenu(numberDishes: Array<number>) {\n    let dishes: Array<Dish> = [];\n    \n    numberDishes.forEach(dish => {\n      dishes.push(this.dishes[dish - 1]);\n    });\n    let menu = new Menu(dishes);\n\n    this.addMenu(menu);\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"e434f85863da4cef420c8a4d99f40df0e9054ed1","contentHash":"085ba4dbed3b977543ada87aba5a558cb51fe6c7882e88a0f75221b5b41bcfd5"}}